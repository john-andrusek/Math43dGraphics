[gd_scene load_steps=7 format=2]

[ext_resource path="res://rain2.png" type="Texture" id=1]
[ext_resource path="res://Cube.cs" type="Script" id=2]

[sub_resource type="CubeMesh" id=1]

[sub_resource type="Shader" id=2]
code = "shader_type spatial;
render_mode blend_mix,depth_draw_opaque,cull_back,diffuse_burley,specular_schlick_ggx;
uniform vec4 albedo : hint_color;
uniform sampler2D texture_albedo : hint_albedo;
uniform float specular;
uniform float metallic;
uniform float roughness : hint_range(0,1);
uniform float point_size : hint_range(0,128);
uniform sampler2D texture_metallic : hint_white;
uniform vec4 metallic_texture_channel;
uniform sampler2D texture_roughness : hint_white;
uniform vec4 roughness_texture_channel;
uniform vec3 uv1_scale;
uniform vec3 uv1_offset;
uniform vec3 uv2_scale;
uniform vec3 uv2_offset;
uniform vec2 myVec;
uniform bool shouldInvert;
uniform mat3 shaderMatrix;


void vertex() {
	mat4 multiplyer = PROJECTION_MATRIX * INV_CAMERA_MATRIX * WORLD_MATRIX; 
	vec4 col = vec4(VERTEX, 1);
	POSITION = multiplyer * col;
}




void fragment() {
	vec2 base_uv = UV;
	vec3 base_uv3 = vec3(UV, 1.0);
	if (shouldInvert) {
		base_uv3 = base_uv3 * inverse(shaderMatrix);
	} else {
		base_uv3 = base_uv3 * shaderMatrix;
	}	
	vec2 resUV = vec2(base_uv3.x, base_uv3.y); 
	vec4 albedo_tex = texture(texture_albedo,resUV);
	ALBEDO = albedo.rgb * albedo_tex.rgb;
}
"

[sub_resource type="ShaderMaterial" id=3]
shader = SubResource( 2 )
shader_param/albedo = Color( 1, 1, 1, 1 )
shader_param/specular = 0.5
shader_param/metallic = 0.0
shader_param/roughness = 0.0
shader_param/point_size = 0.0
shader_param/metallic_texture_channel = Plane( 1, 0, 0, 0 )
shader_param/roughness_texture_channel = Plane( 1, 0, 0, 0 )
shader_param/uv1_scale = Vector3( 1, 1, 1 )
shader_param/uv1_offset = Vector3( 0, 0, 0 )
shader_param/uv2_scale = Vector3( 1, 1, 1 )
shader_param/uv2_offset = Vector3( 0, 0, 0 )
shader_param/myVec = null
shader_param/shouldInvert = null
shader_param/shaderMatrix = null
shader_param/texture_albedo = ExtResource( 1 )

[sub_resource type="SpatialMaterial" id=4]
albedo_color = Color( 0.137255, 0.0784314, 0.537255, 1 )

[node name="world" type="Spatial"]

[node name="OmniLight" type="OmniLight" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -8.78028, 4.98882, -4.83765 )
omni_range = 5.01945

[node name="Spatial" type="Spatial" parent="."]

[node name="Cube" type="MeshInstance" parent="Spatial"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -0.208353, -0.0865197, -0.0599647 )
mesh = SubResource( 1 )
material/0 = SubResource( 3 )
script = ExtResource( 2 )

[node name="CSGSphere" type="CSGSphere" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 1.43804, 2.25584, -3.35019 )
radius = 1.51
material = SubResource( 4 )

[node name="ARVROrigin" type="ARVROrigin" parent="."]

[node name="ARVRCamera" type="ARVRCamera" parent="ARVROrigin"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 5 )

[node name="CSGTorus" type="CSGTorus" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 5.73243, 1.48275, 1.6979 )

[node name="invertTransform" type="CheckBox" parent="."]
margin_left = 258.556
margin_top = 15.2222
margin_right = 440.556
margin_bottom = 39.2222
custom_colors/font_color = Color( 0, 0, 0, 1 )
text = "Invert texture transform"

[node name="Label" type="Label" parent="."]
margin_left = 14.0
margin_top = 13.0
margin_right = 122.0
margin_bottom = 27.0
custom_colors/font_color = Color( 0, 0, 0, 1 )
text = "Texture translate"

[node name="translateSpeed" type="HSlider" parent="."]
margin_left = 13.2963
margin_top = 61.7407
margin_right = 216.296
margin_bottom = 77.7407
focus_mode = 0
max_value = 10.0
value = 5.0
ticks_on_borders = false
focus_mode = 0

[node name="Label2" type="Label" parent="."]
margin_left = 109.889
margin_top = 82.8519
margin_right = 125.889
margin_bottom = 96.8519
custom_colors/font_color = Color( 0, 0, 0, 1 )
text = "0"

[node name="Label3" type="Label" parent="."]
margin_left = 88.8889
margin_top = 37.9259
margin_right = 139.889
margin_bottom = 51.9259
custom_colors/font_color = Color( 0, 0, 0, 1 )
text = "X Speed"

[node name="yTransateSpeed" type="HSlider" parent="."]
margin_left = 15.4074
margin_top = 135.37
margin_right = 214.407
margin_bottom = 151.37
focus_mode = 0
max_value = 10.0
value = 5.0
ticks_on_borders = false
focus_mode = 0

[node name="Label4" type="Label" parent="."]
margin_left = 110.519
margin_top = 159.148
margin_right = 122.519
margin_bottom = 173.148
custom_colors/font_color = Color( 0, 0, 0, 1 )
text = "0"

[node name="Label5" type="Label" parent="."]
margin_left = 90.1111
margin_top = 115.852
margin_right = 140.111
margin_bottom = 129.852
custom_colors/font_color = Color( 0, 0, 0, 1 )
text = "Y Speed"

[node name="Label6" type="Label" parent="."]
margin_left = 20.7406
margin_top = 184.296
margin_right = 105.741
margin_bottom = 198.296
custom_colors/font_color = Color( 0, 0, 0, 1 )
text = "Texture Scale"

[node name="scaleFactor" type="HSlider" parent="."]
margin_left = 17.6667
margin_top = 211.037
margin_right = 217.667
margin_bottom = 227.037
focus_mode = 0
max_value = 10.0
value = 5.0
ticks_on_borders = false
focus_mode = 0

[node name="Label7" type="Label" parent="."]
margin_left = 115.296
margin_top = 232.556
margin_right = 127.296
margin_bottom = 246.556
custom_colors/font_color = Color( 0, 0, 0, 1 )
text = "0"

[node name="Label8" type="Label" parent="."]
margin_left = 26.2963
margin_top = 388.296
margin_right = 322.296
margin_bottom = 575.296
custom_colors/font_color = Color( 0, 0, 0, 1 )
text = "Key assignments:

up arrow --->  Move cube up
down arrow --> Move cube down
left arrow --> Move cube left
right arrow --> Move cube right
Shift up arrow --> move cube toward you 
Shift down arrow --> move cube away from you
z --> rotate cube around z axis
y --> rotate cube around y axis
x --> rotate cube around x axis 

"
[connection signal="toggled" from="invertTransform" to="Spatial/Cube" method="_on_invertTransform_toggled"]
[connection signal="value_changed" from="translateSpeed" to="Spatial/Cube" method="_on_translateSpeed_value_changed"]
[connection signal="value_changed" from="yTransateSpeed" to="Spatial/Cube" method="_on_yTransateSpeed_value_changed"]
[connection signal="value_changed" from="scaleFactor" to="Spatial/Cube" method="_on_scaleFactor_value_changed"]
